package com.sunny.refdata;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.sunny.refdata.RefData;
import com.sunny.refdata.RefDataRepository;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/sunnyrefdata") // This means URL's start with /sunnyrefdata (after Application path)
public class RefDataController {
	@Autowired // This means to get the bean called refDataRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private RefDataRepository refDataRepository;
	
	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String symbol
			, @RequestParam String name, @RequestParam Double marketCap, @RequestParam Integer iPOYear,
			@RequestParam String sector, @RequestParam String industry, @RequestParam String summaryQuote) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		
		RefData n = new RefData();
		n.setSymbol(symbol);
		n.setName(name);
		n.setMarketCap(marketCap);
		n.setIPOYear(iPOYear);
		n.setSector(sector);
		n.setIndustry(industry);
		n.setSummaryQuote(summaryQuote);
		refDataRepository.save(n);
		return "Saved";
	}
	
	@GetMapping(path="/all")
	public @ResponseBody Iterable<RefData> getAllUsers() {
		// This returns a JSON or XML with the users
		return refDataRepository.findAll();
	}
}


